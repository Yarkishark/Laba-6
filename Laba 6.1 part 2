"""1 часть – написать программу в соответствии со своим вариантом задания. 
Написать алгоритмический вариант формирования. На плоскости задано К точек. 
Сформировать все возможные варианты выбора множества точек из них на проверку того, что они являются вершинами квадрата."""

def distance(p1, p2):
    return (p2[0] - p1[0])**2 + (p2[1] - p1[1])**2

def is_square(p1, p2, p3, p4):
    d2 = distance(p1, p2)
    d3 = distance(p1, p3)
    d4 = distance(p1, p4)

    if d2 == 0 or d3 == 0 or d4 == 0:
        return False

    if d2 == d3 and 2 * d2 == d4 and 2 * distance(p2, p4) == distance(p2, p3):
        return True

    if d3 == d4 and 2 * d3 == d2 and 2 * distance(p3, p2) == distance(p3, p4):
        return True

    if d2 == d4 and 2 * d2 == d3 and 2 * distance(p2, p3) == distance(p2, p4):
        return True

    return False

def find_squares(points):
    squares = []
    n = len(points)
    for i in range(n):
        p1 = points[i]
        for j in range(i + 1, n):
            p2 = points[j]
            for k in range(j + 1, n):
                p3 = points[k]
                for l in range(k + 1, n):
                    p4 = points[l]
                    if is_square(p1, p2, p3, p4):
                        squares.append([p1, p2, p3, p4])
    return squares

def main():
    k = int(input("Введите количество точек: "))
    points = []
    for i in range(k):
        x, y = map(int, input(f"Введите координаты {i+1} точки (через пробел): ").split())
        points.append((x, y))
    
    squares = find_squares(points)
    print("Возможные вершины квадрата:")
    for square in squares:
        print(square)

if __name__ == "__main__":
    main()
